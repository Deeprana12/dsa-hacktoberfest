    #include <bits/stdc++.h>
    using namespace std;
    #define ll long long int
    #define F(i, a, b) for (long long i = a; i < b; i++)
    #define RF(i, a, b) for (long long i = a; i >= b; i--)
    #define pb push_back
    #define ff first
    #define ss second
    #define yes cout << "YES\n"
    #define no cout << "NO\n"
    #define cm1 cout << "-1\n"
    #define vi vector<int>
    #define vll vector<long long>
    #define vpll vector<pair<long long, long long>>
    #define vpii vector<pair<int, int>>
    #define vi vector<int>
    #define vf vector<float>
    #define vs vector<string>
    #define si set<int>
    #define sll set<long long>
    #define pii pair<int, int>
    #define pll pair<ll, ll>
    #define all(v) v.begin(), v.end()
    #define mod 1000000007
    #define print(v) for(auto x : v) cout << x << ' ';cout << '\n';
     
    bool isPrime(ll n)
    {
        if (n <= 1)
            return false;
        if (n <= 3)
            return true;
        if (n % 2 == 0 || n % 3 == 0)
            return false;
        ll p = sqrt(n);
        for (int i = 5; i <= p; i += 6)
            if (n % i == 0 || n % (i + 2) == 0)
                return false;
        return true;
    }
     
    string d2b(int n)
    {
        string s;
        // Size of an integer is assumed to be 32 bits
        for (int i = 31; i >= 0; i--)
        {
            int k = n >> i;
            if (k & 1)
                s += '1';
            else
                s += "0";
        }
        return s;
    }
     
    ll gcd(ll a, ll b)
    {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }
     
    ll lcm(ll a, ll b)
    {
        return (a * b) / gcd(a, b);
    }
     
    ll b2d(string n)
    {
        string num = n;
        ll dec_value = 0;
     
        // Initializing base value to 1, i.e 2^0
        ll base = 1;
     
        ll len = num.length();
        for (int i = len - 1; i >= 0; i--)
        {
            if (num[i] == '1')
                dec_value += base;
            base = base * 2;
        }
     
        return dec_value;
    }
    
    bool sbs(const pair<int,int> &a,
                  const pair<int,int> &b)
    {
        return (a.second < b.second);
    }
     
     
    int f, f1, f2;
     
    // vll v[2000005];
    // int vis[2000005];
     
    // void dfs(ll n)
    // {
    //     vis[n] = 1;
    //     for(auto i:v[n]){
    //         if(!vis[i])
    //             dfs(i);
    //     }
    // }
    
    // int solveIt(int x,int n,string s){
    //     if(n%2){
    //         n = n - 1;
    //     }
    //     int i = x;
    //     while(j < n && s[i]==s[j]){
    //         i++;
    //         j++;
    //     }
    //     if(j != n)
    //         return 1;
    //     return 0;
    // }
    
     
    int main()
    {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);        
        
        int test_case = 1;
        cin >> test_case;     
        while (test_case--){
            
            int f = 1;
            int n;
            cin>>n;
            int a[n];
            string s;
            
            F(i,0,n)
                cin >> a[i];
            cin>>s;
            map<int,char>mp;
            F(i,0,n){
                if(mp.count(a[i])){
                    if(mp[a[i]] != s[i]){
                        no;
                        f=0;
                        break;
                    }
                }else{
                    mp[a[i]] = s[i];
                }
            }
            
            if(f)
                yes;
        }
    }
